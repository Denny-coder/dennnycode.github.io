{"title":"Denny的博客","description":"前端菜鸟，但愿意学习，希望有大佬能带带我","language":null,"link":"http://yoursite.com","pubDate":"Tue, 03 Sep 2019 07:37:57 GMT","lastBuildDate":"Tue, 03 Sep 2019 07:38:56 GMT","generator":"hexo-generator-json-feed","webMaster":"Denny","items":[{"title":"iview表格合并","link":"http://yoursite.com/2019/09/03/iview表格合并/","description":"","pubDate":"Tue, 03 Sep 2019 07:37:57 GMT","guid":"http://yoursite.com/2019/09/03/iview表格合并/","category":""},{"title":"正则学习笔记","link":"http://yoursite.com/2019/08/29/正则学习笔记/","description":"正则表达式是匹配模式，要么匹配字符，要么匹配位置。 请记住这句话。","pubDate":"Thu, 29 Aug 2019 07:49:33 GMT","guid":"http://yoursite.com/2019/08/29/正则学习笔记/","category":"正则表达式"},{"title":"git常见命令","link":"http://yoursite.com/2019/08/29/git常见命令/","description":"12git config --global user.name \"Your Name\"git config --global user.email \"email@example.com\" 创建版本库123456mkdir learngit // 创建文件cd learngit // 进入文件git init // 初始化仓库git add readme.txt // 将readme.txt文件放入到暂存区git commit -m \"wrote a readme file\" //提交暂存区的修改到仓库中","pubDate":"Thu, 29 Aug 2019 06:24:05 GMT","guid":"http://yoursite.com/2019/08/29/git常见命令/","category":"git"},{"title":"初见微信小程序","link":"http://yoursite.com/2019/08/29/初见微信小程序/","description":"1.当从一个tab跳往另一个tab页面时应使用wx.switchTab,此方法不能携带参数。2.当我们想从当前页回到上一页时，我们不能简单的使用wx.navigateTo，应该使用wx.navigateBack，其原因在于小程序中页面栈最多十层。使用wx.navigateBack时，很不幸我们无法让其携带参数，我们可以通过以下代码实现：123456789let pages = getCurrentPages(); // 当前页的数据，可以输出来看看有什么东西let prevPage = pages[pages.length - 2]; // 上一页的数据，也可以输出来看看有什么东西/** 设置数据 这里面的 value 是上一页你想被携带过去的数据，后面是本方法里你得到的数据，我这里是detail.value，根据自己实际情况设置 */prevPage.setData(&#123; hadConfirm: true,&#125;)wx.navigateBack(&#123; delta: 2&#125;)","pubDate":"Thu, 29 Aug 2019 05:55:00 GMT","guid":"http://yoursite.com/2019/08/29/初见微信小程序/","category":"微信小程序"},{"title":"ionic serve刷新无响应","link":"http://yoursite.com/2019/08/29/ionic-serve刷新无响应/","description":"cli packages: (C:\\Users\\Coder\\AppData\\Roaming\\npm\\node_modules)12@ionic/cli-utils : 1.12.0ionic (Ionic CLI) : 3.12.0","pubDate":"Thu, 29 Aug 2019 03:37:49 GMT","guid":"http://yoursite.com/2019/08/29/ionic-serve刷新无响应/","category":"ionic"},{"title":"vue中select绑定多个值及回显","link":"http://yoursite.com/2019/08/29/vue中select绑定多个值及回显/","description":"距离上篇文章已经快九个月了，我是不是堕落了。。这篇文章主要是记录我在项目中遇到的一个小问题，其实说小也不小，在去年刚接触vue的时候，对于select如何绑定多个值这个问题一度让我不知所措。刚开始完全没接触过vue和elementUI直接上手，跟着element粘贴复制官网写着还挺顺利，突然某天后台需要在select选中时让我多传个值，我不知道怎么办了，官网上例子是这样的： v-model只能是value的值，我完全被官网的例子限制住了（怪我太蠢）。","pubDate":"Thu, 29 Aug 2019 03:13:45 GMT","guid":"http://yoursite.com/2019/08/29/vue中select绑定多个值及回显/","category":"Vue"},{"title":"类似表格的删除与添加","link":"http://yoursite.com/2017/12/20/类似表格的删除与添加/","description":"这是吐槽，可以跳过的，刚学习vue的时候用的第一个框架是elementUI，真的是爱不释手，公司的业务要求也没那么多，基本都能满足，现在不一样了，啥都得自己写了。怎么说呢，幸与不幸，幸运的是能够自己多动手动脑了，不幸的是貌似脑子不够用的。。。。这个类表格，为什么要类表格呢？他虽然可以做成table,但因为很多人感觉table太low，所以大家都不怎么用，领导也不让用，于是我就用了这个类表格的称呼。在一些业务场景中我们得让用户能对类表格能增加删除，假如我们用的是jQuery，这就是简单的字符串拼接和事件绑定，中间会有点小波折，比如事件委托（刚开始是真的头疼）。但是我们现在用的vue，我们不应该再去拼接一坨字符串，我们只要操作数据就行了，我的思路如下：","pubDate":"Wed, 20 Dec 2017 05:57:01 GMT","guid":"http://yoursite.com/2017/12/20/类似表格的删除与添加/","category":"Vue"},{"title":"vue简易表格全选","link":"http://yoursite.com/2017/12/14/vue简易表格全选/","description":"最近以为公司业务需要不让用我最爱的elementUI了，刚开始感觉没啥，后来真到开始写了，真的就懵逼，组件不让用啥都得自己写了。。 最常用表格全选都都变成了一个坎。 对于表格全选，我们一定能想到就是判断表格的个数和表格选中的个数相比较，相等全选按钮就处于选中状态，不等就不选中，可是这又不是jQuery，选择器又不能用。对于刚接触vue半年而且大部分时间都在用饿了么组件的我真的是不知所措。 搜了很多资料，看到很多解决方案都是要在数据中加入checked状态，我是拒绝的，就算我愿意后台哥哥也不愿意啊，这不是脏数据嘛！ 而且还不是组件式的，谁想用都得copy一大坨代码，我相信我们组长是拒绝的。感觉好难哦。。。 但是问题还是要解决，饭还是要吃的。 回家的想了想，看了看vue的官网，灵感就来了，很快就把解决了。 你以为就这就完了？？","pubDate":"Thu, 14 Dec 2017 08:50:37 GMT","guid":"http://yoursite.com/2017/12/14/vue简易表格全选/","category":"Vue"},{"title":"Vue中的父子组件通信","link":"http://yoursite.com/2017/11/23/Vue中的父子组件通信/","description":"Vue中父组件向子组件传值，主要依靠组件中的props属性，下面是一个局部注册组件栗子","pubDate":"Thu, 23 Nov 2017 06:30:37 GMT","guid":"http://yoursite.com/2017/11/23/Vue中的父子组件通信/","category":"Vue"},{"title":"jQuery中的下载","link":"http://yoursite.com/2017/11/23/jQuery中的下载/","description":"在公司项目开发过程中遇到的小点，记录一下","pubDate":"Thu, 23 Nov 2017 06:30:37 GMT","guid":"http://yoursite.com/2017/11/23/jQuery中的下载/","category":"jQuery"},{"title":"get与post请求你知道多少？","link":"http://yoursite.com/2017/11/21/get与post请求你知道多少？/","description":"GET和POST是HTTP请求的两种基本方法，要说它们的区别，接触过WEB开发的人都能说出一二。 最直观的区别就是GET把参数包含在URL中，POST通过request body传递参数。 你可能自己写过无数个GET和POST请求，或者已经看过很多权威网站总结出的他们的区别，你非常清楚知道什么时候该用什么。 当你在面试中被问到这个问题，你的内心充满了自信和喜悦。","pubDate":"Tue, 21 Nov 2017 02:48:47 GMT","guid":"http://yoursite.com/2017/11/21/get与post请求你知道多少？/","category":"http"},{"title":"博客初建成，谈一下感想吧！","link":"http://yoursite.com/2017/11/17/博客初建成，谈一下感想吧！/","description":"一，搭建个人博客这个想法从我刚刚开始接触前端就有了，感觉那是一件很cool的事，现在我就正在做这件很cool的事。 二，我是一名90后，我们这代人跟随着腾讯的小企鹅一起成长，从1999年的OICQ生到今天腾讯QQ，从飞车到英雄联盟（怪我生的晚之前的没玩过 罒ω罒），从天天酷跑到王者农药。当然腾讯对我们影响最大的还是社交，我们喜欢用QQ，也习惯了QQ，多少年不见得老友都能通过QQ找回来。还有QQ空间，这可能是那个时候我们唯一能够发泄心情的地方了，随时随地的发个说说，A（某位朋友的口中@）一下某人，分享一下自己的苦与乐。然而在不知不觉中","pubDate":"Fri, 17 Nov 2017 03:00:19 GMT","guid":"http://yoursite.com/2017/11/17/博客初建成，谈一下感想吧！/","category":"杂谈"}]}